name: Release

on:
  push:
    branches: ["main"]
    tags: ["v*"]
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/**"
      - "*.md"
      - ".*ignore"
      - "benches/**"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/**"
      - "*.md"
      - ".*ignore"
      - "benches/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.1.1
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-alpine:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=alpine
            type=ref,event=tag,suffix=alpine-
            type=semver,pattern={{version}},suffix=alpine-

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.1.1
        with:
          file: "./Dockerfile.alpine"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    outputs:
      release_body: ${{ steps.release.outputs.RELEASE_BODY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="${r//'%'/'%25'}"     # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"   # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"   # Multiline escape sequences for '\r'
          echo "::set-output name=RELEASE_BODY::$r"

      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ steps.release.outputs.RELEASE_BODY }}
